// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketEase.Service.TicketPurchase.DbContexts;

#nullable disable

namespace TicketEase.Service.TicketPurchase.Migrations
{
    [DbContext(typeof(TicketPurchaseDbContext))]
    [Migration("20250121055326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketEase.Service.TicketPurchase.Entities.Function", b =>
                {
                    b.Property<Guid>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FunctionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");

                    b.HasData(
                        new
                        {
                            FunctionId = new Guid("d5a91f8e-8254-4d1d-bf32-f1d0282a5416"),
                            FunctionDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("7a573bf8-d473-4291-b221-b39b7ca415c9"),
                            Price = 50.00m
                        },
                        new
                        {
                            FunctionId = new Guid("15b49d93-cf74-4f7e-8394-6c75fe54685c"),
                            FunctionDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("d12f5f9e-05a3-4742-8ecf-174c4ae57527"),
                            Price = 65.00m
                        });
                });

            modelBuilder.Entity("TicketEase.Service.TicketPurchase.Entities.Ticket", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AdditionalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("FunctionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.HasIndex("FunctionId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea319"),
                            AdditionalPrice = 10.00m,
                            FunctionId = new Guid("d5a91f8e-8254-4d1d-bf32-f1d0282a5416"),
                            UserName = "JohnDoe"
                        },
                        new
                        {
                            TicketId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea318"),
                            AdditionalPrice = 15.00m,
                            FunctionId = new Guid("15b49d93-cf74-4f7e-8394-6c75fe54685c"),
                            UserName = "JaneSmith"
                        });
                });

            modelBuilder.Entity("TicketEase.Service.TicketPurchase.Entities.Ticket", b =>
                {
                    b.HasOne("TicketEase.Service.TicketPurchase.Entities.Function", "Function")
                        .WithMany("Tickets")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Function");
                });

            modelBuilder.Entity("TicketEase.Service.TicketPurchase.Entities.Function", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
